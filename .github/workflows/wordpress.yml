name: Deploy Plugin

on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  phpcs:
    name: Syntax Check
    uses: tarosky/workflows/.github/workflows/phpcs.yml@main
    with:
      version: 8.0

  assets:
    name: Check JS & CSS syntax
    uses: tarosky/workflows/.github/workflows/npm.yml@main
    with:
      node_version: 16
      package: package

  status-check:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [ phpcs, assets ]
    if: always()
    steps:
    - uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  release:
    name: Deploy WordPress.org
    needs: [ status-check ]
    if: contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    steps:

      - name: Install SVN
        run: sudo apt-get install -y subversion

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Build Plugin
        run: |
          npm install
          npm run package

      - name: Generate readme.txt
        uses: tarosky/workflows/actions/wp-readme@main

      - name: Versioning
        uses: tarosky/workflows/actions/versioning@main
        with:
          version: ${{ github.ref }}
          files: taro-taxonomy-blocks.php,readme.txt

      - name: Deploy to WordPress Directory
        id: deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          generate-zip: true
        env:
          SVN_USERNAME: ${{ secrets.WP_ORG_USERNAME_TAROSKY }}
          SVN_PASSWORD: ${{ secrets.WP_ORG_PASSWORD_TAROSKY }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
